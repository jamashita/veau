{
  "extends": [
    "eslint:recommended"
  ],
  "plugins": [
    "@typescript-eslint"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "sourceType": "module",
    "ecmaVersion": 2018,
    "ecmaFeatures": {
      "jsx": true
    },
    "project": "./tsconfig.json"
  },
  "rules": {
    "constructor-super": "error",
    "curly": [
      "error",
      "all"
    ],
    "guard-for-in": "error",
    "no-bitwise": "error",
    "no-caller": "error",
    "no-cond-assign": "error",
    "no-console": "error",
    "no-debugger": "error",
    "no-duplicate-case": "error",
    "no-empty": "error",
    "no-eval": "error",
    "no-redeclare": "error",
    "no-new-wrappers": "error",
    "no-new-func": "error",
    "no-unused-labels": "error",
    "no-restricted-imports": "error",
    "no-magic-numbers": "error",
    "no-param-reassign": "error",
    "no-sequences": "error",
    "no-template-curly-in-string": "error",
    "no-invalid-this": "error",
    "no-return-await": "error",
    "no-shadow": "error",
    "no-sparse-arrays": "error",
    "dot-notation": "error",
    "no-throw-literal": "error",
    "no-fallthrough": "error",
    "no-unsafe-finally": "error",
    "no-unused-expression": "error",
    "no-unused-vars": "error",
    "no-var": "error",
    "no-void": "error",
    "prefer-object-spread": "error",
    "radix": "error",
    "default-case": "error",
    "eqeqeq": "error",
    "valid-typeof": "error",
    "use-isnan": "error",
    "eol-last": "error",
    "max-classes-per-file": [
      "error",
      1
    ],
    "prefer-const": "error",
    "comma-dangle": "error",
    "arrow-parens": "error",
    "arrow-body-style": "error",
    "yoda": "error",
    "spaced-comment": [
      "error",
      "always"
    ],
    "new-parens": "error",
    "no-multiple-empty-lines": "error",
    "no-irregular-whitespace": [
      "error",
      {
        "skipStrings": false,
      }
    ],
    "no-trailing-spaces": "error",
    "no-undef-init": "error",
    "object-shorthand": "error",
    "one-var": [
      "error",
      "never"
    ],
    "quotes": [
      "error",
      "single"
    ],
    "semi": "error",
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "never",
        "named": "never",
        "asyncArrow": "always"
      }
    ],
    "space-in-parens": [
      "error",
      "never"
    ],
    "prefer-template": "error",
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/ban-types": "error",
    "@typescript-eslint/explicit-member-accessibility": "error",
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "classes": [
          "instance-field",
          "static-field",
          "static-method",
          "constructor",
          "instance-method"
        ]
      }
    ],
    "@typescript-eslint/no-empty-interface": "error",
    "@typescript-eslint/no-namespace": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/no-triple-slash-reference": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-var-requires": "error",
    "@typescript-eslint/promise-function-async": "error",
    "@typescript-eslint/no-for-in-array": "error",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-object-literal-type-assertion": "error",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/no-use-before-define": "error",
    "@typescript-eslint/restrict-plus-operands": "error",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/array-type": [
      "error",
      "generic"
    ],
    "@typescript-eslint/prefer-function-type": "error",
    "@typescript-eslint/class-name-casing": "error",
    "@typescript-eslint/no-angle-bracket-type-assertion": "error",
    "@typescript-eslint/no-parameter-properties": "error",
    "@typescript-eslint/no-unnecessary-qualifier": "error",
    "@typescript-eslint/member-delimiter-style": "error",
    "@typescript-eslint/type-annotation-spacing": [
      "error",
      {
        "before": false,
        "after": true
      }
    ]
  }
}
